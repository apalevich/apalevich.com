---
const {content} = Astro.props;

function createArrayFromHeading(): [string, string] {
  const sentence = content.heading;
  const words = sentence.split(' ');
  const lastWord = words.pop(); // Remove and capture the last word
  const restOfString = words.join(' '); // Re-join the remaining words
  return [restOfString, lastWord ?? '']; // Return the array, handling the case where the sentence might be empty
}

---
<div class="relative pt-40 pb-0 lg:pt-36" id="hero-section">
    <div class="relative xl:container m-auto px-6 md:px-12 lg:px-6 sm:w-10/12 md:w-2/3 sm:mx-auto lg:w-6/12">
        <h1 class="sm:mx-auto sm:w-10/12 md:w-full font-black text-blue-900 text-4xl text-center sm:text-5xl md:text-6xl lg:w-auto xl:text-7xl dark:text-white">
            {createArrayFromHeading()[0]} <br class="lg:block hidden"> <div class="tooltip relative inline-block text-transparent bg-clip-text bg-gradient-to-r dark:bg-gradient-to-l from-gradient1 to-gradient2 dark:from-primaryLight dark:to-secondaryLight">{createArrayFromHeading()[1]}
                <span class="hidden md:block tooltiptext w-full md:w-max text-sm font-light italic bg-gray-500/90 text-white">{content.note}</span>
            </div>
        </h1>
        <div class="relative mt-8 lg:mt-16 space-y-8 w-10/12 mx-auto text-center">
            <p class="sm:text-lg text-gray-700 dark:text-gray-300" set:html={content.subheading}></p>
        </div>
        <div class="flex flex-col md:flex-row mx-auto gap-4 mt-8 lg:mt-16 w-10/12 max-w-[800px]">
            <a href="https://chromewebstore.google.com/detail/mate-ai-code-review/cdohahemhlpibhhpiojlmeecfhllddho" target="_blank" class="w-full text-center border-gradient2 border-2 rounded-[6px] hover:bg-gradient2 bg-gradient2 text-white hover:text-white relative mx-auto flex min-h-9 ml-auto items-center justify-center sm:px-3 text-sm font-semibold" onclick="window?.fbq('track', 'InitiateCheckout');">
                Download for Chrome
            </a>
            <!-- <button class="w-full text-center border-gradient2 dark:border-gradient1 dark:bg-gradient1 border-2 rounded-[6px] hover:bg-gradient2 dark:bg-transparent text-gradient2 dark:text-white hover:text-white relative mx-auto flex min-h-9 ml-auto items-center justify-center sm:px-3 text-sm font-semibold" data-modal-show>
                Alert Me at Launch 
            </button> -->
        </div>
        <p class="text-center text-[.7em] text-gray-400 mt-4 mx-auto w-10/12">
            We&nbsp;respect your&nbsp;privacy and&nbsp;do not&nbsp;share your&nbsp;email with&nbsp;third parties. We&nbsp;promise not&nbsp;to send&nbsp;spam.
        </p>
    </div>
    <div class="mt-12 h-[370px] sm:h-[40vh] flex md:hidden">
        <div class="w-3/4 bg-[url(/magic_button.jpg)] bg-cover bg-right-top blur-xs">
            <div class="h-full w-full bg-gradient-to-r from-[rgba(255,255,255,.8)] dark:from-[rgba(0,0,0,.8)] to-[rgba(0,0,0,0)]"></div>
        </div>
        <div class="w-1/4"></div>
    </div>
</div>
<script>
    function trackEvent(eventName:string) {
        if (!window.fbq) {
            console.error(`FB tracking error: ${eventName} can't be tracked as window.fbq is not found`);
            return;
        }
        
        const standartEvents = [
            "AddPaymentInfo",
            "AddToCart",
            "AddToWishlist",
            "CompleteRegistration",
            "Contact",
            "CustomizeProduct",
            "Donate",
            "FindLocation",
            "InitiateCheckout",
            "Lead",
            "Purchase",
            "Schedule",
            "Search",
            "StartTrial",
            "SubmitApplication",
            "Subscribe",
            "ViewContent"
        ];
        const eventType = standartEvents.includes(eventName) ? 'track' : 'trackCustom';
        window.fbq(eventType, eventName);
    }
</script>

<style>
    
    .tooltip .tooltiptext {
        visibility: hidden;
        /* background-color: #555;
        color: #fff; */
        text-align: center;
        padding: 5px 10px;
        border-radius: 6px;
    
        /* Position the tooltip text */
        position: absolute;
        bottom: -50%;
        right: 50%;
        transform: translateX(50%);
    
        /* Fade in tooltip */
        opacity: 0;
        transition: opacity 0.3s;
    }
    
    /* Tooltip arrow */
    .tooltip .tooltiptext::after {
        content: "";
        position: absolute;
        bottom: 100%;
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color:  transparent transparent #555 transparent;
    }
    
    /* Show the tooltip text when you mouse over the tooltip container */
    .tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }
    </style>
