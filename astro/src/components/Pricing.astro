---
const { content } = Astro.props;

---
<!-- MOBILE CARDS -->
<div class="xl:container m-auto px-6 py-20 md:px-12 lg:px-20">
  <div class="m-auto text-center lg:w-7/12">
    <h2 class="text-3xl font-bold text-gray-800 dark:text-white md:text-4xl">
      { content.Heading }
    </h2>
  </div>
  <div class="mt-12 grid items-center gap-6 md:grid-cols-2 lg:flex lg:space-x-8 lg:items-start">
    {
      content.Plans.map((plan,i) => (
        // TODO: add row-start-1 to make move a card to the first place in the mobile version
      <div class:list={['group relative md:col-span-2', i === 1 ? 'lg:w-[36%] lg:col-span-2' : 'lg:w-[32%]']} data-modal-show>
        <div
          aria-hidden="true"
          class="absolute top-0 h-full w-full rounded-3xl border border-gray-100 dark:border-gray-700 bg-white dark:bg-gray-800 shadow-2xl shadow-gray-600/10 dark:shadow-none transition duration-500 group-hover:scale-105 lg:group-hover:scale-110"
        ></div>
        <div class="relative space-y-8 p-8">
          <h3 class="text-center text-3xl font-semibold text-gray-700 dark:text-white">{plan.Title}</h3>
          <div class="relative flex justify-center">
            <div class="text-3xl font-bold grow-1">
              $
            </div>
            <div class="text-8xl">
              <span class="font-bold text-gray-800 dark:text-white">{plan.MonthlyPrice}</span>
            </div>
            <div class="text-xl font-bold self-end">
              / Month
            </div>
          </div>
          <ul role="list" class="m-auto space-y-4 pb-6 text-gray-600 dark:text-gray-300">
            {
              plan.Features.map(feature => (
              <li class="space-x-2">
                <span class="font-semibold text-primary">&check;</span>
                <span>{feature}</span>
              </li>
              ))
            }
          </ul>
          <button class:list={['relative flex h-11 w-full items-center justify-center px-6 before:absolute before:inset-0 before:rounded-full before:bg-gradient2', {'before:bg-white': !plan.CallToAction.Available}, 'before:transition before:duration-300 hover:before:scale-105 active:duration-75 active:before:scale-95']} data-modal-show>
            <span class:list={['relative text-base font-semibold', plan.CallToAction.Available ? 'text-white' : 'text-gradient2']}>{plan.CallToAction.Text}</span>
          </button>
        </div>
      </div>
      ))
    }
  </div>
</div>