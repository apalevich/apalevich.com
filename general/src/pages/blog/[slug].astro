---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import { render } from 'astro:content';
import FormattedDate from '@components/FormattedDate.astro';

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await render(entry);
---

<Layout title={entry.data.title}>
    <style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
		<main>
			<article>
				<div class="hero-image">
					{entry.data.image.src && <img width={1020} height={510} src={entry.data.image.src} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={entry.data.publishDate} />
							{
								entry.data.publishDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={entry.data.publishDate} />
									</div>
								)
							}
						</div>
						<h1>{entry.data.title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
</Layout>
